import de.undercouch.gradle.tasks.download.Download

plugins {
    id 'java'
    id 'de.undercouch.download' version '3.1.1'
}

group 'me.kosinkadink'
version '0.1.0'

repositories {
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://jitpack.io' }
    mavenCentral()
    mavenLocal()
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.15.2-R0.1-SNAPSHOT"
    compileOnly "org.spigotmc:spigot:1.15.2-R0.1-SNAPSHOT"
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
}


compileJava.dependsOn {
    buildSpigot
}

// START Building Spigot and Bukkit

def spigotBuildDir = new File("$buildDir/spigot/")

task setupWorkspace(dependsOn: ['buildSpigot']) {
}

task buildSpigot(type: JavaExec) {
    if (hasSpigot()) {
        enabled = false;
        dependsOn = [];
    } else {
        dependsOn = ['cleanSpigotBuild', 'downloadBuildTool']
    }
    main = '-jar'
    args new File(spigotBuildDir, "BuildTools.jar").getAbsolutePath(), "--rev", project.property("apibuildtoolversion")
    workingDir = spigotBuildDir
}

task downloadBuildTool(type: Download) {
    spigotBuildDir.mkdirs()
    src project.property("buildtoolurl")
    dest new File(spigotBuildDir, "BuildTools.jar")
}

task cleanSpigotBuild() {
    spigotBuildDir.deleteDir()
}

def hasSpigot() {
    def groupId = "org.spigotmc"
    def version = project.property("apiversion")
    return hasArtifact(groupId, "spigot-api", version) && hasArtifact(groupId, "spigot", version)
}

def hasArtifact(groupId, artifactId, version) {
    def localMavenRepo = new File(new File(ant.properties['user.home'] as String), ".m2/repository/")
    def file = new File(localMavenRepo, groupId.replace('.', '/') + "/" + artifactId + "/" + version + "/")
    return file.exists()
}
